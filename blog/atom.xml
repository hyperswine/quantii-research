<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://research.quantii.dev/blog</id>
    <title>Quantii Research Blog</title>
    <updated>2022-12-21T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://research.quantii.dev/blog"/>
    <subtitle>Quantii Research Blog</subtitle>
    <icon>https://research.quantii.dev/img/Quantii.png</icon>
    <entry>
        <title type="html"><![CDATA[Halting Problem]]></title>
        <id>/halting-problem</id>
        <link href="https://research.quantii.dev/blog/halting-problem"/>
        <updated>2022-12-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The halting problem is quite simple yet complex. It can be applied to many situations. Many types of programs can be reduced to a formulation of the halting problem, and it is useful in ensuruing a program doesn't just hang there doing nothing.]]></summary>
        <content type="html"><![CDATA[<p>The halting problem is quite simple yet complex. It can be applied to many situations. Many types of programs can be reduced to a formulation of the halting problem, and it is useful in ensuruing a program doesn't just hang there doing nothing.</p><p>Of interest are total functional programming languages. These langs are "provably terminating", i.e. you can guarentee statically that they will eventually halt.</p><hr><h2 style="text-align:center">Discuss</h2><p><giscus-widget repo="hyperswine/projects" repoid="R_kgDOIZg-sQ" category="Announcements" categoryid="DIC_kwDOIZg-sc4CSmin" mapping="pathname" strict="0" reactionsenabled="1" emitmetadata="0" inputposition="top" theme="preferred_color_scheme" lang="en" loading="lazy" crossorigin="anonymous">
</giscus-widget></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Instruction Set Architecture from First Principles: Part 1]]></title>
        <id>/isa-pt1</id>
        <link href="https://research.quantii.dev/blog/isa-pt1"/>
        <updated>2022-12-18T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[Instructions are imperative by default on atomic execution environments. This is probably because digital electronics are ubiquitous and hence most modern atomic instructions are built from discrete signals. If it was built from continuous signals, perhaps we could have something quite different, and not imperative. I think its still possible to have "declarative" instructions.]]></summary>
        <content type="html"><![CDATA[<p>Instructions are imperative by default on atomic execution environments. This is probably because digital electronics are ubiquitous and hence most modern atomic instructions are built from discrete signals. If it was built from continuous signals, perhaps we could have something quite different, and not imperative. I think its still possible to have "declarative" instructions.</p><hr><h2 style="text-align:center">Discuss</h2><p><giscus-widget repo="hyperswine/projects" repoid="R_kgDOIZg-sQ" category="Announcements" categoryid="DIC_kwDOIZg-sc4CSmin" mapping="pathname" strict="0" reactionsenabled="1" emitmetadata="0" inputposition="top" theme="preferred_color_scheme" lang="en" loading="lazy" crossorigin="anonymous">
</giscus-widget></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Performance Considerations, Pt. 1]]></title>
        <id>/performance-post</id>
        <link href="https://research.quantii.dev/blog/performance-post"/>
        <updated>2022-12-17T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[What is performance and why do we care?]]></summary>
        <content type="html"><![CDATA[<p><strong>What is performance and why do we care?</strong></p><p>That is a great question.</p><hr><h2 style="text-align:center">Discuss</h2><p><giscus-widget repo="hyperswine/projects" repoid="R_kgDOIZg-sQ" category="Announcements" categoryid="DIC_kwDOIZg-sc4CSmin" mapping="pathname" strict="0" reactionsenabled="1" emitmetadata="0" inputposition="top" theme="preferred_color_scheme" lang="en" loading="lazy" crossorigin="anonymous">
</giscus-widget></p>]]></content>
    </entry>
</feed>