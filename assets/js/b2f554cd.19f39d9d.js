"use strict";(self.webpackChunkquantii_research=self.webpackChunkquantii_research||[]).push([[477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/halting-problem","metadata":{"permalink":"/blog/halting-problem","source":"@site/blog/halting-problem.md","title":"Halting Problem","description":"The halting problem is quite simple yet complex. It can be applied to many situations. Many types of programs can be reduced to a formulation of the halting problem, and it is useful in ensuruing a program doesn\'t just hang there doing nothing.","date":"2022-12-21T00:00:00.000Z","formattedDate":"December 21, 2022","tags":[],"readingTime":0.37,"hasTruncateMarker":false,"authors":[],"frontMatter":{"date":"2022-12-21T00:00:00.000Z","name":"Jasen Qin","title":"Halting Problem","url":"https://github.com/hyperswine","email":"jasen.qin33@gmail.com"},"nextItem":{"title":"Instruction Set Architecture from First Principles: Part 1","permalink":"/blog/isa-pt1"}},"content":"The halting problem is quite simple yet complex. It can be applied to many situations. Many types of programs can be reduced to a formulation of the halting problem, and it is useful in ensuruing a program doesn\'t just hang there doing nothing.\\n\\nOf interest are total functional programming languages. These langs are \\"probably terminating\\".\\n\\n---\\n\\n<h2 style={{textAlign: \\"center\\"}}>Discuss</h2>\\n\\n<giscus-widget repo=\\"hyperswine/projects\\"\\n        repoid=\\"R_kgDOIZg-sQ\\"\\n        category=\\"Announcements\\"\\n        categoryid=\\"DIC_kwDOIZg-sc4CSmin\\"\\n        mapping=\\"pathname\\"\\n        strict=\\"0\\"\\n        reactionsenabled=\\"1\\"\\n        emitmetadata=\\"0\\"\\n        inputposition=\\"top\\"\\n        theme=\\"preferred_color_scheme\\"\\n        lang=\\"en\\"\\n        loading=\\"lazy\\"\\n        crossorigin=\\"anonymous\\">\\n</giscus-widget>"},{"id":"/isa-pt1","metadata":{"permalink":"/blog/isa-pt1","source":"@site/blog/isa-pt1.md","title":"Instruction Set Architecture from First Principles: Part 1","description":"Instructions are imperative by default on atomic execution environments. This is probably because digital electronics are ubiquitous and hence most modern atomic instructions are built from discrete signals. If it was built from continuous signals, perhaps we could have something quite different, and not imperative. I think its still possible to have \\"declarative\\" instructions.","date":"2022-12-18T10:00:00.000Z","formattedDate":"December 18, 2022","tags":[],"readingTime":0.365,"hasTruncateMarker":false,"authors":[],"frontMatter":{"date":"2022-12-18T10:00","name":"Jasen Qin","title":"Instruction Set Architecture from First Principles: Part 1","url":"https://github.com/hyperswine","email":"jasen.qin33@gmail.com"},"prevItem":{"title":"Halting Problem","permalink":"/blog/halting-problem"},"nextItem":{"title":"Performance Considerations, Pt. 1","permalink":"/blog/performance-post"}},"content":"Instructions are imperative by default on atomic execution environments. This is probably because digital electronics are ubiquitous and hence most modern atomic instructions are built from discrete signals. If it was built from continuous signals, perhaps we could have something quite different, and not imperative. I think its still possible to have \\"declarative\\" instructions.\\n\\n---\\n\\n<h2 style={{textAlign: \\"center\\"}}>Discuss</h2>\\n\\n<giscus-widget repo=\\"hyperswine/projects\\"\\n        repoid=\\"R_kgDOIZg-sQ\\"\\n        category=\\"Announcements\\"\\n        categoryid=\\"DIC_kwDOIZg-sc4CSmin\\"\\n        mapping=\\"pathname\\"\\n        strict=\\"0\\"\\n        reactionsenabled=\\"1\\"\\n        emitmetadata=\\"0\\"\\n        inputposition=\\"top\\"\\n        theme=\\"preferred_color_scheme\\"\\n        lang=\\"en\\"\\n        loading=\\"lazy\\"\\n        crossorigin=\\"anonymous\\">\\n</giscus-widget>"},{"id":"/performance-post","metadata":{"permalink":"/blog/performance-post","source":"@site/blog/performance-post.md","title":"Performance Considerations, Pt. 1","description":"What is performance and why do we care?","date":"2022-12-17T10:00:00.000Z","formattedDate":"December 17, 2022","tags":[],"readingTime":0.16,"hasTruncateMarker":false,"authors":[],"frontMatter":{"date":"2022-12-17T10:00","name":"Jasen Qin","title":"Performance Considerations, Pt. 1","url":"https://github.com/hyperswine","email":"jasen.qin33@gmail.com"},"prevItem":{"title":"Instruction Set Architecture from First Principles: Part 1","permalink":"/blog/isa-pt1"}},"content":"**What is performance and why do we care?**\\n\\nThat is a great question.\\n\\n---\\n\\n<h2 style={{textAlign: \\"center\\"}}>Discuss</h2>\\n\\n<giscus-widget repo=\\"hyperswine/projects\\"\\n        repoid=\\"R_kgDOIZg-sQ\\"\\n        category=\\"Announcements\\"\\n        categoryid=\\"DIC_kwDOIZg-sc4CSmin\\"\\n        mapping=\\"pathname\\"\\n        strict=\\"0\\"\\n        reactionsenabled=\\"1\\"\\n        emitmetadata=\\"0\\"\\n        inputposition=\\"top\\"\\n        theme=\\"preferred_color_scheme\\"\\n        lang=\\"en\\"\\n        loading=\\"lazy\\"\\n        crossorigin=\\"anonymous\\">\\n</giscus-widget>"}]}')}}]);